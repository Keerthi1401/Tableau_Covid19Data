<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20212.21.0818.1843                               -->
<workbook original-version='18.1' source-build='2021.2.2 (20212.21.0818.1843)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='coronavirus-data-explorer' inline='true' name='federated.1wcmu4k0fitz4y17qa1ly1cwmx3r' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='coronavirus-data-explorer' name='textscan.0cfer911xtp14h1a9wvj10of8jg8'>
            <connection class='textscan' directory='/Users/keerrthanasridhar/Downloads' filename='coronavirus-data-explorer.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0cfer911xtp14h1a9wvj10of8jg8' name='coronavirus-data-explorer.csv' table='[coronavirus-data-explorer#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='string' name='icu_patients' ordinal='17' />
            <column datatype='string' name='icu_patients_per_million' ordinal='18' />
            <column datatype='string' name='hosp_patients' ordinal='19' />
            <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='string' name='new_tests' ordinal='25' />
            <column datatype='string' name='total_tests' ordinal='26' />
            <column datatype='string' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='string' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='string' name='new_tests_smoothed' ordinal='29' />
            <column datatype='string' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='string' name='positive_rate' ordinal='31' />
            <column datatype='string' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='real' name='total_vaccinations' ordinal='34' />
            <column datatype='real' name='people_vaccinated' ordinal='35' />
            <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='string' name='total_boosters' ordinal='37' />
            <column datatype='real' name='new_vaccinations' ordinal='38' />
            <column datatype='real' name='new_vaccinations_smoothed' ordinal='39' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='40' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='41' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='42' />
            <column datatype='string' name='total_boosters_per_hundred' ordinal='43' />
            <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='44' />
            <column datatype='real' name='stringency_index' ordinal='45' />
            <column datatype='real' name='population' ordinal='46' />
            <column datatype='real' name='population_density' ordinal='47' />
            <column datatype='real' name='median_age' ordinal='48' />
            <column datatype='real' name='aged_65_older' ordinal='49' />
            <column datatype='real' name='aged_70_older' ordinal='50' />
            <column datatype='real' name='gdp_per_capita' ordinal='51' />
            <column datatype='string' name='extreme_poverty' ordinal='52' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='53' />
            <column datatype='real' name='diabetes_prevalence' ordinal='54' />
            <column datatype='string' name='female_smokers' ordinal='55' />
            <column datatype='string' name='male_smokers' ordinal='56' />
            <column datatype='real' name='handwashing_facilities' ordinal='57' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='58' />
            <column datatype='real' name='life_expectancy' ordinal='59' />
            <column datatype='real' name='human_development_index' ordinal='60' />
            <column datatype='string' name='excess_mortality_cumulative_absolute' ordinal='61' />
            <column datatype='string' name='excess_mortality_cumulative' ordinal='62' />
            <column datatype='string' name='excess_mortality' ordinal='63' />
            <column datatype='string' name='excess_mortality_cumulative_per_million' ordinal='64' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0cfer911xtp14h1a9wvj10of8jg8' name='coronavirus-data-explorer.csv' table='[coronavirus-data-explorer#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='real' name='total_cases' ordinal='4' />
            <column datatype='real' name='new_cases' ordinal='5' />
            <column datatype='real' name='new_cases_smoothed' ordinal='6' />
            <column datatype='real' name='total_deaths' ordinal='7' />
            <column datatype='real' name='new_deaths' ordinal='8' />
            <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
            <column datatype='real' name='total_cases_per_million' ordinal='10' />
            <column datatype='real' name='new_cases_per_million' ordinal='11' />
            <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
            <column datatype='real' name='total_deaths_per_million' ordinal='13' />
            <column datatype='real' name='new_deaths_per_million' ordinal='14' />
            <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
            <column datatype='real' name='reproduction_rate' ordinal='16' />
            <column datatype='string' name='icu_patients' ordinal='17' />
            <column datatype='string' name='icu_patients_per_million' ordinal='18' />
            <column datatype='string' name='hosp_patients' ordinal='19' />
            <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
            <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
            <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
            <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
            <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
            <column datatype='string' name='new_tests' ordinal='25' />
            <column datatype='string' name='total_tests' ordinal='26' />
            <column datatype='string' name='total_tests_per_thousand' ordinal='27' />
            <column datatype='string' name='new_tests_per_thousand' ordinal='28' />
            <column datatype='string' name='new_tests_smoothed' ordinal='29' />
            <column datatype='string' name='new_tests_smoothed_per_thousand' ordinal='30' />
            <column datatype='string' name='positive_rate' ordinal='31' />
            <column datatype='string' name='tests_per_case' ordinal='32' />
            <column datatype='string' name='tests_units' ordinal='33' />
            <column datatype='real' name='total_vaccinations' ordinal='34' />
            <column datatype='real' name='people_vaccinated' ordinal='35' />
            <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
            <column datatype='string' name='total_boosters' ordinal='37' />
            <column datatype='real' name='new_vaccinations' ordinal='38' />
            <column datatype='real' name='new_vaccinations_smoothed' ordinal='39' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='40' />
            <column datatype='real' name='people_vaccinated_per_hundred' ordinal='41' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='42' />
            <column datatype='string' name='total_boosters_per_hundred' ordinal='43' />
            <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='44' />
            <column datatype='real' name='stringency_index' ordinal='45' />
            <column datatype='real' name='population' ordinal='46' />
            <column datatype='real' name='population_density' ordinal='47' />
            <column datatype='real' name='median_age' ordinal='48' />
            <column datatype='real' name='aged_65_older' ordinal='49' />
            <column datatype='real' name='aged_70_older' ordinal='50' />
            <column datatype='real' name='gdp_per_capita' ordinal='51' />
            <column datatype='string' name='extreme_poverty' ordinal='52' />
            <column datatype='real' name='cardiovasc_death_rate' ordinal='53' />
            <column datatype='real' name='diabetes_prevalence' ordinal='54' />
            <column datatype='string' name='female_smokers' ordinal='55' />
            <column datatype='string' name='male_smokers' ordinal='56' />
            <column datatype='real' name='handwashing_facilities' ordinal='57' />
            <column datatype='real' name='hospital_beds_per_thousand' ordinal='58' />
            <column datatype='real' name='life_expectancy' ordinal='59' />
            <column datatype='real' name='human_development_index' ordinal='60' />
            <column datatype='string' name='excess_mortality_cumulative_absolute' ordinal='61' />
            <column datatype='string' name='excess_mortality_cumulative' ordinal='62' />
            <column datatype='string' name='excess_mortality' ordinal='63' />
            <column datatype='string' name='excess_mortality_cumulative_per_million' ordinal='64' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>new_cases_smoothed</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>new_deaths_smoothed</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_smoothed_per_million]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>new_cases_smoothed_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_smoothed_per_million]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>new_deaths_smoothed_per_million</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reproduction_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[reproduction_rate]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>reproduction_rate</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>icu_patients</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[icu_patients_per_million]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>icu_patients_per_million</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>hosp_patients</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hosp_patients_per_million]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>hosp_patients_per_million</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>weekly_icu_admissions</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_icu_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_icu_admissions_per_million]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>weekly_icu_admissions_per_million</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weekly_hosp_admissions_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[weekly_hosp_admissions_per_million]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>weekly_hosp_admissions_per_million</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_smoothed]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>new_tests_smoothed</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_smoothed_per_thousand</remote-name>
            <remote-type>129</remote-type>
            <local-name>[new_tests_smoothed_per_thousand]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>new_tests_smoothed_per_thousand</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive_rate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[positive_rate]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>positive_rate</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_per_case</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_per_case]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>tests_per_case</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>129</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_boosters]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>total_boosters</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters_per_hundred</remote-name>
            <remote-type>129</remote-type>
            <local-name>[total_boosters_per_hundred]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>total_boosters_per_hundred</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>44</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stringency_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[stringency_index]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>stringency_index</remote-alias>
            <ordinal>45</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>46</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population_density]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>population_density</remote-alias>
            <ordinal>47</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_age</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_age]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>median_age</remote-alias>
            <ordinal>48</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_65_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_65_older]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>aged_65_older</remote-alias>
            <ordinal>49</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>aged_70_older</remote-name>
            <remote-type>5</remote-type>
            <local-name>[aged_70_older]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>aged_70_older</remote-alias>
            <ordinal>50</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_per_capita]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>gdp_per_capita</remote-alias>
            <ordinal>51</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extreme_poverty</remote-name>
            <remote-type>129</remote-type>
            <local-name>[extreme_poverty]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>extreme_poverty</remote-alias>
            <ordinal>52</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cardiovasc_death_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cardiovasc_death_rate]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>cardiovasc_death_rate</remote-alias>
            <ordinal>53</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>diabetes_prevalence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[diabetes_prevalence]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>diabetes_prevalence</remote-alias>
            <ordinal>54</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>female_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[female_smokers]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>female_smokers</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>male_smokers</remote-name>
            <remote-type>129</remote-type>
            <local-name>[male_smokers]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>male_smokers</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>handwashing_facilities</remote-name>
            <remote-type>5</remote-type>
            <local-name>[handwashing_facilities]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>handwashing_facilities</remote-alias>
            <ordinal>57</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_beds_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hospital_beds_per_thousand]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>hospital_beds_per_thousand</remote-alias>
            <ordinal>58</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>life_expectancy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[life_expectancy]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>life_expectancy</remote-alias>
            <ordinal>59</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>human_development_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[human_development_index]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>human_development_index</remote-alias>
            <ordinal>60</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative_absolute</remote-name>
            <remote-type>129</remote-type>
            <local-name>[excess_mortality_cumulative_absolute]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>excess_mortality_cumulative_absolute</remote-alias>
            <ordinal>61</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative</remote-name>
            <remote-type>129</remote-type>
            <local-name>[excess_mortality_cumulative]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>excess_mortality_cumulative</remote-alias>
            <ordinal>62</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality</remote-name>
            <remote-type>129</remote-type>
            <local-name>[excess_mortality]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>excess_mortality</remote-alias>
            <ordinal>63</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>excess_mortality_cumulative_per_million</remote-name>
            <remote-type>129</remote-type>
            <local-name>[excess_mortality_cumulative_per_million]</local-name>
            <parent-name>[coronavirus-data-explorer.csv]</parent-name>
            <remote-alias>excess_mortality_cumulative_per_million</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='coronavirus-data-explorer.csv' datatype='table' name='[__tableau_internal_object_id__].[coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D]' role='measure' type='quantitative' />
      <column caption='Aged 65 Older' datatype='real' name='[aged_65_older]' role='measure' type='quantitative' />
      <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
      <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
      <column caption='Excess Mortality' datatype='string' name='[excess_mortality]' role='dimension' type='nominal' />
      <column caption='Excess Mortality Cumulative' datatype='string' name='[excess_mortality_cumulative]' role='dimension' type='nominal' />
      <column caption='Excess Mortality Cumulative Absolute' datatype='string' name='[excess_mortality_cumulative_absolute]' role='dimension' type='nominal' />
      <column caption='Excess Mortality Cumulative Per Million' datatype='string' name='[excess_mortality_cumulative_per_million]' role='dimension' type='nominal' />
      <column caption='Extreme Poverty' datatype='string' name='[extreme_poverty]' role='dimension' type='nominal' />
      <column caption='Female Smokers' datatype='string' name='[female_smokers]' role='dimension' type='nominal' />
      <column caption='Gdp Per Capita' datatype='real' name='[gdp_per_capita]' role='measure' type='quantitative' />
      <column caption='Handwashing Facilities' datatype='real' name='[handwashing_facilities]' role='measure' type='quantitative' />
      <column caption='Hosp Patients' datatype='string' name='[hosp_patients]' role='dimension' type='nominal' />
      <column caption='Hosp Patients Per Million' datatype='string' name='[hosp_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Hospital Beds Per Thousand' datatype='real' name='[hospital_beds_per_thousand]' role='measure' type='quantitative' />
      <column caption='Human Development Index' datatype='real' name='[human_development_index]' role='measure' type='quantitative' />
      <column caption='Icu Patients' datatype='string' name='[icu_patients]' role='dimension' type='nominal' />
      <column caption='Icu Patients Per Million' datatype='string' name='[icu_patients_per_million]' role='dimension' type='nominal' />
      <column caption='Iso Code' datatype='string' name='[iso_code]' role='dimension' type='nominal' />
      <column caption='Life Expectancy' datatype='real' name='[life_expectancy]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Male Smokers' datatype='string' name='[male_smokers]' role='dimension' type='nominal' />
      <column caption='Median Age' datatype='real' name='[median_age]' role='measure' type='quantitative' />
      <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='New Cases Per Million' datatype='real' name='[new_cases_per_million]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed' datatype='real' name='[new_cases_smoothed]' role='measure' type='quantitative' />
      <column caption='New Cases Smoothed Per Million' datatype='real' name='[new_cases_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths' datatype='real' name='[new_deaths]' role='measure' type='quantitative' />
      <column caption='New Deaths Per Million' datatype='real' name='[new_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed' datatype='real' name='[new_deaths_smoothed]' role='measure' type='quantitative' />
      <column caption='New Deaths Smoothed Per Million' datatype='real' name='[new_deaths_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='New Tests' datatype='string' name='[new_tests]' role='dimension' type='nominal' />
      <column caption='New Tests Per Thousand' datatype='string' name='[new_tests_per_thousand]' role='dimension' type='nominal' />
      <column caption='New Tests Smoothed' datatype='string' name='[new_tests_smoothed]' role='dimension' type='nominal' />
      <column caption='New Tests Smoothed Per Thousand' datatype='string' name='[new_tests_smoothed_per_thousand]' role='dimension' type='nominal' />
      <column caption='New Vaccinations' datatype='real' name='[new_vaccinations]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed' datatype='real' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='real' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='People Vaccinated' datatype='real' name='[people_vaccinated]' role='measure' type='quantitative' />
      <column caption='People Vaccinated Per Hundred' datatype='real' name='[people_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Population Density' datatype='real' name='[population_density]' role='measure' type='quantitative' />
      <column caption='Positive Rate' datatype='string' name='[positive_rate]' role='dimension' type='nominal' />
      <column caption='Reproduction Rate' datatype='real' name='[reproduction_rate]' role='measure' type='quantitative' />
      <column caption='Stringency Index' datatype='real' name='[stringency_index]' role='measure' type='quantitative' />
      <column caption='Tests Per Case' datatype='string' name='[tests_per_case]' role='dimension' type='nominal' />
      <column caption='Tests Units' datatype='string' name='[tests_units]' role='dimension' type='nominal' />
      <column caption='Total Boosters' datatype='string' name='[total_boosters]' role='dimension' type='nominal' />
      <column caption='Total Boosters Per Hundred' datatype='string' name='[total_boosters_per_hundred]' role='dimension' type='nominal' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Cases Per Million' datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='string' name='[total_tests]' role='dimension' type='nominal' />
      <column caption='Total Tests Per Thousand' datatype='string' name='[total_tests_per_thousand]' role='dimension' type='nominal' />
      <column caption='Total Vaccinations' datatype='real' name='[total_vaccinations]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <column caption='Weekly Hosp Admissions' datatype='string' name='[weekly_hosp_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Hosp Admissions Per Million' datatype='string' name='[weekly_hosp_admissions_per_million]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions' datatype='string' name='[weekly_icu_admissions]' role='dimension' type='nominal' />
      <column caption='Weekly Icu Admissions Per Million' datatype='string' name='[weekly_icu_admissions_per_million]' role='dimension' type='nominal' />
      <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      <column-instance column='[weekly_icu_admissions]' derivation='None' name='[none:weekly_icu_admissions:nk]' pivot='key' type='nominal' />
      <column-instance column='[aged_65_older]' derivation='Sum' name='[sum:aged_65_older:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cardiovasc_death_rate]' derivation='Sum' name='[sum:cardiovasc_death_rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[diabetes_prevalence]' derivation='Sum' name='[sum:diabetes_prevalence:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hospital_beds_per_thousand]' derivation='Sum' name='[sum:hospital_beds_per_thousand:qk]' pivot='key' type='quantitative' />
      <column-instance column='[people_fully_vaccinated]' derivation='Sum' name='[sum:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_cases_per_million]' derivation='Sum' name='[sum:total_cases_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_deaths_per_million]' derivation='Sum' name='[sum:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_vaccinations_per_hundred]' derivation='Sum' name='[sum:total_vaccinations_per_hundred:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (Continent,YEAR(Date))]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:continent:nk]' />
          <groupfilter function='level-members' level='[tyr:date:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:weekly_icu_admissions:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;1.004&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;10.0&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;102.314&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;109.505&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;1115.027&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;12.219&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;120.022&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;130.372&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;14.757&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;148.138&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;1543.575&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;16.789&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;172.163&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;18.946&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;1927.502&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;204.739&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;21.643&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;236.082&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;25.072&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;28.917&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;280.38&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;2801.999&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;3.0&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;32.897&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;324.0&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;380.8&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;39.0&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;442.44&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;45.167&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;5.019&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;52.149&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;557.988&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;58.518&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;644.0&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;67.249&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;7.128&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;78.407&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;89.525&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;895.233&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1046.989&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;107.647&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;11.611&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;116.087&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;127.46&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;13.773&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1345.861&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;138.855&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;15.784&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;159.002&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1776.416&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;18.067&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;190.605&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2.037&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;20.739&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;222.805&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;23.677&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;2438.962&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;257.0&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;27.623&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;30.912&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;303.095&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;34.832&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;345.415&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;4.015&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;418.738&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;42.359&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;50.06&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;508.609&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;55.092&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;6.773&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;615.269&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;64.0&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;75.379&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;774.0&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;84.842&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9.0&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;95.787&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;0.992&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;100.625&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1076.89&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;108.391&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;11.966&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;119.37&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;128.0&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1389.968&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;14.0&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;146.418&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;16.046&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;163.591&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;18.594&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;1865.739&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;199.0&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2.951&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;21.53&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;228.239&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;24.466&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;2698.748&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;271.526&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;28.015&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;309.77&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;31.929&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;37.689&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;370.346&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;4.933&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;427.22&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;44.27&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;51.0&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;537.249&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;56.838&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;625.0&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;66.245&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;7.74&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;78.02&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;841.038&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;86.121&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;9.675&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;1.957&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;10.037&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;103.736&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;113.068&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;1165.0&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;12.789&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;122.974&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;131.138&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;15.0&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;151.905&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;1692.832&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;17.311&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;178.066&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;19.347&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2010.74&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;207.579&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;22.063&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;239.866&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;26.014&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;289.053&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;29.108&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;2971.734&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;3.055&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;33.094&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;330.902&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;390.098&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;40.883&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;46.616&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;486.758&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;5.919&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;52.948&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;575.765&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;59.687&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;69.314&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;691.313&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;7.977&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;79.904&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;90.858&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;926.346&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1.018&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;10.59&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;103.009&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;111.402&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1118.038&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;12.515&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;120.373&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;130.619&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;14.798&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;150.52&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1547.553&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;17.0&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;173.191&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;19.0&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;1930.974&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;205.743&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;21.937&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;237.754&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;25.787&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;280.476&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;2885.422&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;29.0&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;3.87&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;32.906&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;327.032&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;381.787&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;39.504&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;447.378&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;46.0&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;5.091&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;52.248&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;563.0&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;58.725&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;654.0&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;68.144&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;7.702&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;78.922&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;89.531&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;909.0&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;0.997&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;101.166&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1077.893&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;108.629&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;119.019&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;12.0&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;128.249&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;14.04&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1412.031&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;147.421&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;16.366&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;166.419&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;18.692&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;1866.328&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2.963&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;200.481&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;21.011&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;229.861&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;24.663&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;272.282&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;2783.028&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;28.059&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;313.066&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;32.092&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;371.922&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;38.141&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;4.986&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;432.0&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;44.284&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;51.575&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;538.236&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;57.06&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;636.008&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;66.426&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;7.87&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;78.223&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;850.315&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;86.643&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;9.838&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;1023.0&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;107.233&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;11.041&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;115.103&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;125.962&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;13.237&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;1305.594&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;137.989&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;15.658&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;157.562&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;1755.935&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;18.009&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;184.952&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;2.001&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;20.94&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;218.0&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;23.487&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;2403.682&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;250.578&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;27.1&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;298.005&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;30.548&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;34.566&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;343.0&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;4.0&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;413.0&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;42.12&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;48.135&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;502.683&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;54.874&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;6.003&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;611.208&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;62.891&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;73.395&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;755.73&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;8.879&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;84.163&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;94.344&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;0.0&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1047.0&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;107.822&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;11.805&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;116.459&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;127.076&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;13.811&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1349.876&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;140.0&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;159.519&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;16.0&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1788.104&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;18.291&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;190.607&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2.829&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;20.828&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;223.195&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;24.0&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;2544.189&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;266.363&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;28.08&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;304.0&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;31.0&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;35.706&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;361.0&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;4.073&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;42.421&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;420.262&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;50.367&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;511.849&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;55.246&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;6.887&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;618.0&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;64.468&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;76.218&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;789.253&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;85.59&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;9.005&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;96.0&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;10.969&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;106.859&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;114.437&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;124.97&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;1252.576&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;13.96&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;136.0&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;15.403&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;153.555&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;17.853&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;1735.268&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;183.968&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2.0&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;20.01&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;215.0&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;2194.928&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;23.012&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;243.979&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;26.779&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;294.302&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;3.967&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;30.0&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;338.642&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;34.126&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;3759.579&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;400.961&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;41.396&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;47.175&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;500.809&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;53.968&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;6.11&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;605.393&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;61.493&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;72.8&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;724.891&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;8.146&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;82.297&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;93.72&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;976.726&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1.0&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;101.289&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;109.2&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1095.958&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;119.374&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;12.006&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;128.366&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;14.052&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1420.054&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;147.568&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;16.448&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;167.244&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;18.764&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;1867.746&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2.975&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;202.66&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;21.078&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;232.664&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;25.03&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;273.562&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;2789.964&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;28.104&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;315.689&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;32.119&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;376.359&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;38.508&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;435.0&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;44.394&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;5.0&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;51.852&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;543.0&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;58.166&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;636.298&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;67.084&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;7.004&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;78.283&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;858.0&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;87.099&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;9.865&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;1.973&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;10.183&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;104.715&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;113.523&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;1191.303&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;12.894&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;123.309&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;132.811&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;15.008&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;152.668&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;17.416&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;1703.152&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;179.512&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;19.351&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2018.763&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;209.369&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;22.082&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;240.0&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;26.074&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;29.359&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;290.83&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;2994.548&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;3.851&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;33.449&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;332.818&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;392.073&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;41.88&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;46.975&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;490.832&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;5.951&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;53.215&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;586.675&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;60.501&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;69.428&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;697.992&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;8.0&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;80.249&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;91.747&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;956.975&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;1.984&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;10.643&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;106.66&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;113.573&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;12.963&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;1208.45&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;123.316&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;133.096&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;15.056&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;153.84&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;17.708&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;1708.878&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;179.741&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;19.943&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;2076.929&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;212.768&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;22.402&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;241.028&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;26.097&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;29.628&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;290.048&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;3.915&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;3055.034&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;33.542&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;334.433&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;397.011&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;41.103&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;47.135&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;491.82&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;5.983&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;53.558&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;589.591&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;61.0&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;70.277&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;722.0&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;8.03&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;80.338&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;92.734&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;969.502&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;1009.0&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;107.0&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;11.0&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;115.051&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;124.288&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;1265.571&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;13.007&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;136.493&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;15.481&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;156.743&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;1755.34&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;18.0&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;184.481&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2.96&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;20.66&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;216.433&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;23.066&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;2363.537&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;247.619&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;27.0&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;297.932&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;3.989&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;30.016&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;34.433&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;340.719&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;4002.456&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;405.899&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;41.605&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;47.859&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;501.696&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;54.201&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;6.98&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;607.0&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;62.633&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;73.0&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;739.897&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;8.664&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;82.958&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;93.852&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;1029.719&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;107.398&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;11.201&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;115.424&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;126.953&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;13.701&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;1342.85&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;138.36&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;15.741&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;159.0&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;1773.061&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;18.052&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;189.414&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;2.007&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;20.365&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;221.22&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;23.611&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;2426.928&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;251.0&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;27.92&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;30.582&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;302.843&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;34.657&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;345.0&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;4.002&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;417.751&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;42.082&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;49.098&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;507.0&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;55.15&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;6.022&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;615.222&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;63.477&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;75.09&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;757.481&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;8.888&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;84.606&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;95.693&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1.886&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;10.91&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;103.298&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;112.076&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1124.06&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;12.578&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;121.006&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;130.844&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;14.877&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;150.938&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1636.672&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;17.009&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;174.631&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;19.054&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;1960.597&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;207.056&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;22.0&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;238.74&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;25.926&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;282.147&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;29.53&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;2922.556&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;3.002&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;328.0&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;33.0&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;382.0&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;39.886&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;452.316&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;46.209&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;5.872&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;52.286&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;563.914&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;59.027&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;660.385&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;68.195&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;7.829&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;78.941&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;90.035&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;912.533&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1.001&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;101.593&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;109.395&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1101.0&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;119.976&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;12.045&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;129.181&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;14.256&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1447.807&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;147.775&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;16.771&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;170.67&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;18.845&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;1872.345&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;2.991&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;203.0&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;21.286&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;233.158&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;25.013&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;278.654&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;2792.904&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;28.881&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;32.585&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;321.227&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;379.28&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;38.702&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;44.804&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;440.465&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;5.003&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;51.868&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;547.125&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;58.268&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;642.0&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;67.192&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;7.026&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;78.354&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;878.172&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;89.255&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;9.971&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;0.943&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1071.535&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;108.0&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;11.838&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;118.338&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;127.224&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;13.826&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1369.911&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;141.262&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;16.06&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;161.341&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;18.329&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1813.55&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;193.51&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2.903&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;21.0&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;223.942&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;24.089&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;2573.294&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;270.309&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;28.53&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;305.0&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;31.481&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;36.4&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;367.975&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;4.715&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;42.648&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;423.676&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;50.583&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;512.559&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;55.836&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;6.913&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;619.0&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;64.826&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;76.275&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;811.933&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;85.297&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;9.033&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;96.68&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;1.994&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;10.822&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;106.125&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;114.171&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;1226.501&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;123.846&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;13.0&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;134.489&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;15.274&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;153.471&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;17.758&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;1709.173&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;182.001&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;20.0&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;212.861&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;2122.058&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;22.715&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;242.996&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;26.636&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;29.844&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;292.055&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;3.935&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;3120.27&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;338.38&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;34.0&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;397.134&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;41.117&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;47.172&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;499.0&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;53.911&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;593.542&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;6.0&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;61.175&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;71.24&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;724.0&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;8.004&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;81.294&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;92.971&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;972.777&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;1.935&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;10.005&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;103.528&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;113.0&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;1138.111&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;12.722&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;121.911&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;130.921&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;14.957&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;151.69&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;1670.032&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;17.049&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;174.803&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;19.071&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2002.232&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;207.171&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;22.012&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;239.727&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;26.0&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;284.12&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;29.083&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;2963.459&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;3.011&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;33.017&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;330.487&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;387.399&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;40.124&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;46.442&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;461.0&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;5.903&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;52.849&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;573.0&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;59.219&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;68.351&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;686.0&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;7.935&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;79.286&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;90.494&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;923.397&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;0.979&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1072.875&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;108.217&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;11.851&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;118.384&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;127.945&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;13.886&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1370.952&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;143.201&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;16.008&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;163.309&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;18.383&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;1858.305&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;197.306&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2.936&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;21.06&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;224.472&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;24.438&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2635.519&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;270.914&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;28.64&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;305.824&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;31.909&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;36.658&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;370.0&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;4.838&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;425.537&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;43.54&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;50.855&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;531.0&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;56.005&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;619.54&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;66.0&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;7.0&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;76.334&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;825.0&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;86.112&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;9.164&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;97.199&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:hospital_beds_per_thousand:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:total_vaccinations_per_hundred:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:cardiovasc_death_rate:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:diabetes_prevalence:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:people_fully_vaccinated:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:aged_65_older:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:total_cases_per_million:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:total_deaths_per_million:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:continent:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='coronavirus-data-explorer.csv' id='coronavirus-data-explorer.csv_F7D00674B57B4C08B2CFEA5BFE0C297D'>
            <properties context=''>
              <relation connection='textscan.0cfer911xtp14h1a9wvj10of8jg8' name='coronavirus-data-explorer.csv' table='[coronavirus-data-explorer#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='real' name='total_cases' ordinal='4' />
                  <column datatype='real' name='new_cases' ordinal='5' />
                  <column datatype='real' name='new_cases_smoothed' ordinal='6' />
                  <column datatype='real' name='total_deaths' ordinal='7' />
                  <column datatype='real' name='new_deaths' ordinal='8' />
                  <column datatype='real' name='new_deaths_smoothed' ordinal='9' />
                  <column datatype='real' name='total_cases_per_million' ordinal='10' />
                  <column datatype='real' name='new_cases_per_million' ordinal='11' />
                  <column datatype='real' name='new_cases_smoothed_per_million' ordinal='12' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='13' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='14' />
                  <column datatype='real' name='new_deaths_smoothed_per_million' ordinal='15' />
                  <column datatype='real' name='reproduction_rate' ordinal='16' />
                  <column datatype='string' name='icu_patients' ordinal='17' />
                  <column datatype='string' name='icu_patients_per_million' ordinal='18' />
                  <column datatype='string' name='hosp_patients' ordinal='19' />
                  <column datatype='string' name='hosp_patients_per_million' ordinal='20' />
                  <column datatype='string' name='weekly_icu_admissions' ordinal='21' />
                  <column datatype='string' name='weekly_icu_admissions_per_million' ordinal='22' />
                  <column datatype='string' name='weekly_hosp_admissions' ordinal='23' />
                  <column datatype='string' name='weekly_hosp_admissions_per_million' ordinal='24' />
                  <column datatype='string' name='new_tests' ordinal='25' />
                  <column datatype='string' name='total_tests' ordinal='26' />
                  <column datatype='string' name='total_tests_per_thousand' ordinal='27' />
                  <column datatype='string' name='new_tests_per_thousand' ordinal='28' />
                  <column datatype='string' name='new_tests_smoothed' ordinal='29' />
                  <column datatype='string' name='new_tests_smoothed_per_thousand' ordinal='30' />
                  <column datatype='string' name='positive_rate' ordinal='31' />
                  <column datatype='string' name='tests_per_case' ordinal='32' />
                  <column datatype='string' name='tests_units' ordinal='33' />
                  <column datatype='real' name='total_vaccinations' ordinal='34' />
                  <column datatype='real' name='people_vaccinated' ordinal='35' />
                  <column datatype='real' name='people_fully_vaccinated' ordinal='36' />
                  <column datatype='string' name='total_boosters' ordinal='37' />
                  <column datatype='real' name='new_vaccinations' ordinal='38' />
                  <column datatype='real' name='new_vaccinations_smoothed' ordinal='39' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='40' />
                  <column datatype='real' name='people_vaccinated_per_hundred' ordinal='41' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='42' />
                  <column datatype='string' name='total_boosters_per_hundred' ordinal='43' />
                  <column datatype='real' name='new_vaccinations_smoothed_per_million' ordinal='44' />
                  <column datatype='real' name='stringency_index' ordinal='45' />
                  <column datatype='real' name='population' ordinal='46' />
                  <column datatype='real' name='population_density' ordinal='47' />
                  <column datatype='real' name='median_age' ordinal='48' />
                  <column datatype='real' name='aged_65_older' ordinal='49' />
                  <column datatype='real' name='aged_70_older' ordinal='50' />
                  <column datatype='real' name='gdp_per_capita' ordinal='51' />
                  <column datatype='string' name='extreme_poverty' ordinal='52' />
                  <column datatype='real' name='cardiovasc_death_rate' ordinal='53' />
                  <column datatype='real' name='diabetes_prevalence' ordinal='54' />
                  <column datatype='string' name='female_smokers' ordinal='55' />
                  <column datatype='string' name='male_smokers' ordinal='56' />
                  <column datatype='real' name='handwashing_facilities' ordinal='57' />
                  <column datatype='real' name='hospital_beds_per_thousand' ordinal='58' />
                  <column datatype='real' name='life_expectancy' ordinal='59' />
                  <column datatype='real' name='human_development_index' ordinal='60' />
                  <column datatype='string' name='excess_mortality_cumulative_absolute' ordinal='61' />
                  <column datatype='string' name='excess_mortality_cumulative' ordinal='62' />
                  <column datatype='string' name='excess_mortality' ordinal='63' />
                  <column datatype='string' name='excess_mortality_cumulative_per_million' ordinal='64' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Continents vs age 70+'>
      <table>
        <view>
          <datasources>
            <datasource caption='coronavirus-data-explorer' name='federated.1wcmu4k0fitz4y17qa1ly1cwmx3r' />
          </datasources>
          <datasource-dependencies datasource='federated.1wcmu4k0fitz4y17qa1ly1cwmx3r'>
            <column caption='Aged 70 Older' datatype='real' name='[aged_70_older]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[aged_70_older]' derivation='Sum' name='[sum:aged_70_older:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:aged_70_older:qk]' />
              <color column='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:aged_70_older:qk]' />
              <text column='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:continent:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{60D75B2C-3BA1-420E-B864-1A75A50C2977}' />
    </worksheet>
    <worksheet name='Continents vs ppl fully vaccinated in 2021 '>
      <table>
        <view>
          <datasources>
            <datasource caption='coronavirus-data-explorer' name='federated.1wcmu4k0fitz4y17qa1ly1cwmx3r' />
          </datasources>
          <datasource-dependencies datasource='federated.1wcmu4k0fitz4y17qa1ly1cwmx3r'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column caption='People Fully Vaccinated' datatype='real' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[people_fully_vaccinated]' derivation='Sum' name='[sum:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[Exclusions (Continent,YEAR(Date))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:continent:nk]' />
                <groupfilter function='level-members' level='[tyr:date:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:continent:nk]' member='%null%' />
                <groupfilter function='member' level='[tyr:date:ok]' member='#2021-01-01 00:00:00#' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[tyr:date:ok]'>
            <groupfilter function='member' level='[tyr:date:ok]' member='#2021-01-01 00:00:00#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[tyr:date:ok]</column>
            <column>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[Exclusions (Continent,YEAR(Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:population:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:continent:nk]</rows>
        <cols>([federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[tyr:date:ok] * [federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:people_fully_vaccinated:qk])</cols>
      </table>
      <simple-id uuid='{F1023BFA-35CB-4A48-A2FE-85630BFDCE3B}' />
    </worksheet>
    <worksheet name='Covid with preexisting conditions'>
      <table>
        <view>
          <datasources>
            <datasource caption='coronavirus-data-explorer' name='federated.1wcmu4k0fitz4y17qa1ly1cwmx3r' />
          </datasources>
          <datasource-dependencies datasource='federated.1wcmu4k0fitz4y17qa1ly1cwmx3r'>
            <column caption='Cardiovasc Death Rate' datatype='real' name='[cardiovasc_death_rate]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Diabetes Prevalence' datatype='real' name='[diabetes_prevalence]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[cardiovasc_death_rate]' derivation='Sum' name='[sum:cardiovasc_death_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[diabetes_prevalence]' derivation='Sum' name='[sum:diabetes_prevalence:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths_per_million]' derivation='Sum' name='[sum:total_deaths_per_million:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths Per Million' datatype='real' name='[total_deaths_per_million]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year-Trunc' name='[tyr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[Exclusions (Continent,YEAR(Date))]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:continent:nk]' />
                <groupfilter function='level-members' level='[tyr:date:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:continent:nk]' member='%null%' />
                <groupfilter function='member' level='[tyr:date:ok]' member='#2021-01-01 00:00:00#' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:continent:nk]'>
            <groupfilter function='member' level='[none:continent:nk]' member='&quot;North America&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:location:nk]'>
            <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:location:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:location:nk]</column>
            <column>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[Exclusions (Continent,YEAR(Date))]</column>
            <column>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:continent:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:cardiovasc_death_rate:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:continent:nk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:diabetes_prevalence:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:continent:nk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:total_deaths_per_million:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:continent:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:cardiovasc_death_rate:qk] + ([federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:diabetes_prevalence:qk] + [federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:total_deaths_per_million:qk]))</rows>
        <cols>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[tyr:date:ok]</cols>
      </table>
      <simple-id uuid='{39316FF5-5B31-4844-A72D-91FB029EC235}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='coronavirus-data-explorer' name='federated.1wcmu4k0fitz4y17qa1ly1cwmx3r' />
          </datasources>
          <datasource-dependencies datasource='federated.1wcmu4k0fitz4y17qa1ly1cwmx3r'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[yr:date:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:total_deaths:qk]</rows>
        <cols>([federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:continent:nk] / [federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[yr:date:ok])</cols>
      </table>
      <simple-id uuid='{64D988D3-4361-4805-98D3-CDB0873392C6}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='coronavirus-data-explorer' name='federated.1wcmu4k0fitz4y17qa1ly1cwmx3r' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1wcmu4k0fitz4y17qa1ly1cwmx3r'>
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:continent:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:continent:nk]' />
              <groupfilter function='member' level='[none:continent:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:continent:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:continent:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:total_deaths:qk]</rows>
        <cols>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[yr:date:ok]</cols>
      </table>
      <simple-id uuid='{B80682B0-7581-4C3E-BE00-A417A8981CD9}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='North America Statistics for Vaccinations, age &amp; preexisting conditions'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97256' id='7' param='horz' type-v2='layout-flow' w='98158' x='921' y='1372'>
            <zone h='97256' id='5' type-v2='layout-basic' w='79746' x='921' y='1372'>
              <zone h='48628' id='3' name='Continents vs age 70+' w='39870' x='921' y='1372'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='97256' id='9' name='Covid with preexisting conditions' w='39876' x='40791' y='1372'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48628' id='11' name='Continents vs ppl fully vaccinated in 2021 ' w='39870' x='921' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='97256' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='18412' x='80667' y='1372'>
              <zone h='11149' id='8' name='Continents vs age 70+' pane-specification-id='0' param='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:aged_70_older:qk]' type-v2='color' w='18412' x='80667' y='1372'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7890' id='10' name='Covid with preexisting conditions' pane-specification-id='2' param='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:continent:nk]' type-v2='color' w='18412' x='80667' y='12521'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97256' id='20' param='vert' type-v2='layout-flow' w='98158' x='921' y='1372'>
                <zone fixed-size='280' h='48628' id='3' is-fixed='true' name='Continents vs age 70+' w='39870' x='921' y='1372'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11149' id='8' name='Continents vs age 70+' pane-specification-id='0' param='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:aged_70_older:qk]' type-v2='color' w='18412' x='80667' y='1372'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='97256' id='9' is-fixed='true' name='Covid with preexisting conditions' w='39876' x='40791' y='1372'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7890' id='10' name='Covid with preexisting conditions' pane-specification-id='2' param='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:continent:nk]' type-v2='color' w='18412' x='80667' y='12521'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48628' id='11' is-fixed='true' name='Continents vs ppl fully vaccinated in 2021 ' w='39870' x='921' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{908F95FF-7A0F-4230-A4EE-02DDC96EAE03}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point captured-sheet='' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{18336BEB-D649-4724-8315-2828D56EB982}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Covid with preexisting conditions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:continent:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[:Measure Names]</field>
            <field>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:continent:nk]</field>
            <field>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:location:nk]</field>
            <field>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:weekly_icu_admissions:nk]</field>
            <field>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:total_vaccinations_per_hundred:qk]</field>
            <field>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[tyr:date:ok]</field>
            <field>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2054E3FF-8E65-414D-A7F4-E12591E7E6EA}' />
    </window>
    <window class='worksheet' name='Continents vs age 70+'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:aged_70_older:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:aged_70_older:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4A55EB60-671E-4605-9A60-84BE7446648F}' />
    </window>
    <window class='worksheet' name='Continents vs ppl fully vaccinated in 2021 '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[tyr:date:ok]</field>
            <field>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA66FCF0-760D-4BD3-9E94-EB499D0A08B5}' />
    </window>
    <window class='dashboard' name='North America Statistics for Vaccinations, age &amp; preexisting conditions'>
      <viewpoints>
        <viewpoint name='Continents vs age 70+' />
        <viewpoint name='Continents vs ppl fully vaccinated in 2021 ' />
        <viewpoint name='Covid with preexisting conditions'>
          <zoom type='entire-view' />
          <highlight field='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:continent:nk]'>
            <color-one-way>
              <field>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:continent:nk]</field>
            </color-one-way>
            <bucket-selection>
              <bucket>&quot;North America&quot;</bucket>
            </bucket-selection>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='4' />
      <simple-id uuid='{76AFEC1D-B5F7-40A6-9DC1-11E49CDC3193}' />
    </window>
    <window class='dashboard' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{61CB8384-0DC6-4175-B416-D1C520FF4153}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[yr:date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{49DC9E6B-DEAB-4B07-AFC8-452155B82EBE}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:continent:nk]' type='color' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:continent:nk]</field>
            <field>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[none:location:nk]</field>
            <field>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[sum:total_deaths:qk]</field>
            <field>[federated.1wcmu4k0fitz4y17qa1ly1cwmx3r].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{054EB2B3-73FF-4A8B-A083-7B98BF4F7CE4}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Continents vs age 70+' width='384'>
      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
      EQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQB
      AACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAA
      MIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACj
      CAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoA
      AIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAA
      GEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBR
      BAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUA
      AMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAA
      jCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAo
      AgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIA
      AGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAA
      RhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAU
      AQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEA
      ADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAA
      owgAABhFAADAKAIAAEb5xnsAAPCnctICKgimjfcwpjwCAGDC+fJli8Z7CCYQAAATzn/vP6Dj
      JwfHexhTHgEAMOFE4gkNxRPjPYwpjzeBAcAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMI
      AAAYRQAAwCgCAABG8VUQAKa8ZDKpUHub4tGo8svK5Q8Gx3tIEwIBADDpbf7V4wp1tGvlxz6h
      gvLpI+aFe7r13A+/p87mJuUWl+jqz/6NSqvnnHY9iURCzz/6A1269nblTSsdi6GPKwIAYFKL
      DA5q529/rWQioWkXzFZ+Wbkcx0nNb6rdpRNHjmjt176prIICBbOyz7yyZFKdhxoVj0bHYOTj
      jwAAmNQO7dyu/LJyXbB0meo2btDSG24eMb+ntVUzFi5S6ezq91yX1+/Xnf/6vdEa6oRDAABM
      WvFYVPWbNqp62QpdeOll2vo/v9RgX0iZeflKxGL69XceVMv+fYrHoupta5M/GNSVn7lbvkBA
      tc8+rRW3rtXBHa/qteee0bKbb1XNB6/UU+u+oyvuvFs5xcVyk0k17d6p3c8+rd62Y8rKL9Dy
      W9aqevkKDXSf0I4n1+vI668pOjysjNxcLfnQh7XgyqvH+2k5awQAwKQ1GArp6P69WvPpu5RV
      UKiyOReqYctmLbn+I3K8Xi294SZJUjwS0dIbb5bH61V2YaFCHe1q2r1T0eEhNe3aoSXX36Dp
      F86XXFeNO7bpstvvkOu6Orpvr373o++rZs2VWn7LR9XT2qLQ8Q5JUt/x44rHYlp9x6eUnp2T
      um9p9RwVzagaz6flrBEAAJNW+8EGpWfnKHdaqXx+v+asWKmGLZu08Kqr5Q8GNXPxEjXX7lJ0
      aEjVy1aklgt1tKuzqVGO4+gTDzyogooZchxHycRbf4QmmUhox5NPaN6q1VrzqTvleDyqWrg4
      Nb9ifo0q5tekfi6qrNLBV7eota6OAADAaEomE3r9xedVXFWlY2/slxxHWQWFOrynVqHjnSqu
      fPedcE5xiW689x9SO/8/lYjH1XagXqvu+KQczzsvmYpFIqrf/IoObNusk6GQ3GRSx5ubFBse
      Pm/bONoIAIBJKdTRoY7Gg/IF0vTCjx9NTXeTSR19/bX3DEB2QaGy8gtOu/N/uzPN3/P7Z7Xr
      qSe14qO3q3jmTHk8Xr30k//48zdkHBEAAJNS+4EGpWVk6DPrvi+v761d2db//ZXqN7+iJR++
      QR6P932v3+v1qnBGpZprd6t09juvG6jfvElLb7hZF193fWpaRk7O+3688UAAAExK+za8qPmX
      r1EgPX3E9OplK7Tv5Rd0vLnptDvus+Xx+bTyto/rt+u+I6/XpxkLFqq3vU2JeEwLr7pGOcXF
      qt+0UeUXzlM8GlXdKxtU98ofVFGz4Fw3bczwXUAAJp1EPC5Jmn3JinfMK66aqbI5Fyrc0yvp
      1Ln+P72q1x9MV8nMC+TxvfM1cPncGvnS0uQ4jqoWXaxrPvcFHdi2Wc/94BHt+M16ue6p+624
      9TY5Xq+e+bd12vDTnygtI1MfuP4GZRUUnOetHT2O6765OX++bz72tJ7YsOd8jgeAcbU/+4p+
      uu+AOk4OjvdQUpKJhAb7+5SWmSl/IC01PRaJ6GRvrzLy8uT/YzQmE04BAcB78Hi9ysp/5yt7
      f1qa8kon73cGcQoIAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAU
      AQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEA
      ADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAA
      owgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCK
      AACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgA
      ABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACA
      UQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhF
      AADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQA
      AIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADA
      KAIAAEYRAAAwigAAgFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwi
      AABglO9cFi4tzNHcypLzNRYAkOSoID1NSdcd74FMeY7r8iwDgEX/D7LnEb0oxABTAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Continents vs ppl fully vaccinated in 2021 ' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdWXAc153n+2/WDhRQAAr7QhArQQBcAK7gToqiKYmSLUtqexy2I9zdcyem
      p+fpxrzNw3240S8z0xMzMdET3TEdvj0dtrsVtmxLlLmYi0SKO7gAJCDs+w4UUEChCrVn3gcO
      slkCuIMiyPx/IhAMVmVlnkqC+cv8n5MnFU3TNIQQQhiO6WU3QAghxMshASCEEAYlASCEEAYl
      ASCEEAYlASCEEAYlASCEEAYlASCEEAYlASCEEAYlASCEEAYlASCEEAYlASCEEAYlASCEEAYl
      ASCEEAYlASAMp6Ojg1u3br3sZgjx0kkACMPRNA2ZBV0ICQAhhDAsCQAhhDAoCQAhhDAoCQAh
      hDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAh
      hDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAh
      hDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAh
      hDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAh
      hDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAh
      hDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAh
      hDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAhhDAoCQAh
      hDAoCQAhhDAoRdM07Vk+2NrayjN+VIiXKhKJoKoqDofjZTdFiJfK8qwfjMViEgDilaRpGhs2
      bMBqtb7spohnFAwGicfjpKSkvOymvNKeOQA2b968ku0Q4lvT3t6OyWTCbDa/7KaIZ2QymdA0
      DZPJhKIoL7s5ryzpAxBCCIOSABBCCIN65hKQEK+yX565RzT+slvx5LLSk/lgf/XLboZ4zUgA
      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
    </thumbnail>
    <thumbnail height='384' name='Covid with preexisting conditions' width='384'>
      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
      EEIk8P8Aag3rj/CXmi0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='North America Statistics for Vaccinations, age &amp; preexisting conditions' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdeXhU1f348fedfSaTfU9YEvY97KtsiihEFDdUrFZrpdZqa1FqtVJbd31w
      qfuXVu3PipSCCgIiQlkUZF+ChF2WQMhG9snsc+/vjyRTAgkEWRImn9fz8DzMnTt3zr25cz5n
      u+comqZpCCGEaHF0TZ0AIYQQTUMCgBBCtFASAIQQooWSACCEEC2UBAAhhGihJAAIIUQLJQFA
      CCFaKAkAQgjRQkkAEEKIFkoCgBBCtFASAIQQooWSACCEEC2UBAAhhGihJAAIIUQLJQFACCFa
      KENjd9Q0jWPHjpGTk4PNZqN9+/ZERERctIQdPHiQ6OhooqOjL9p3tBTFxcWUlJSctl2v15Oe
      no6iKGiaxr59+9i3bx+JiYn06dMHo9HYBKkVjeH3+/nxxx8pKioiJiaG9u3bYzabz+uYubm5
      6PV6kpKS6n1/7969bN++ndtuu+28vmf37t2kpaVhtVob3GfBggW0a9eOnj17ntd3XUqaprFn
      zx7S09OxWCw/6Rj79+8nKSmJ8PDwC5y6+jUqAPh8Pt577z1WrFhBp06dcDgclJaW8u677553
      Br127VrCw8Pp1atXne1vv/0248aN4+qrrz6v45+Nx+Ph888/Z+LEiWe8IS9na9euZdGiRXW2
      lZeX43Q6+eKLLzAYDPznP//h008/ZejQocybN49WrVrx17/+FYPhf7eIpmn4/X4JDE2srKyM
      p59+moKCAtLT08nPzyc2NpYZM2ac13HnzZuH3W7nvvvuq/f94uLiCxIApk+fzvPPP0/nzp0p
      LS1l6dKl3H777XX22b17NxaL5bIKAIFAgOnTp/PKK6/Qrl27M+575MgRsrOzGT9+fJ3tr7zy
      Cr/85S8ZNGjQxUzq/2iNsHDhQm3y5Mna0aNHNVVVtUAgoOXk5Ghut7sxHz+jN998U5s7d+5p
      251Op+b1es/7+GdTWVmpTZ48WSstLb3o39WcvPjii9rbb7+tqaqqnThxQhs9erT2448/apqm
      aQ6HQ5s8ebK2fPnyOp9xOp3aI488olVWVjZFkoWmaaqqas8884z2pz/9SXM4HJqmaZrP59MO
      Hjx43sd2u91n/E2vXbtW++Mf/3je3+NwODS/369pmqYdOnRIu+uuu07b58UXX9S+/vrr8/6u
      S0lV1TrndiZr167VHn/88dO2V1VVaT6f72Ikr15nrQG43W5mz57NQw89RKtWrQBQFIXWrVsH
      99myZQuzZs3C4XDQq1cv7r777mDz0KxZs+jVqxdLly5l3759JCcn8+CDDxIfH8+sWbPYuHEj
      YWFhHD58GIPBwN13301MTAzLly8nIyODNm3asGfPHg4ePIjX62X16tV4vV6uv/56xo4dG2y+
      WLVqFfPmzQNg9OjR3HTTTeh0OvLz8/n222+JiYnhm2++obKykhEjRnDbbbdx/Phx/vWvf1FY
      WMg777yD2WymXbt23HTTTRw6dIg5c+ZQUFBAQkICmZmZ9OzZE0VRagMn//jHP7jxxhuJi4sL
      bps/fz69evWiXbt2bNq0icWLF+NwOEhLS2PixIl1rhtAaWkpCxcuZM+ePXg8Hnr06MGkSZMI
      CwsDwOFwMG/ePLKzszGbzXTs2JGBAwfStWtXNE1j165dfPTRR1RUVNCvXz/uuusubDbbGf+m
      eXl5rF69mn/9618oisK6devIyMgIllrCwsKYMGECq1ev5qqrrjq5sEBZWRmqqp7tthEXSW5u
      LmvXrmX27NnBe8RgMJCeng5Ul0IXLVrEkiVLMBqNjBw5kokTJ2IwGJg9ezaDBw8O7gvw3//+
      l+joaPr27cuWLVuwWq306dMHAFVVWblyJd9++y1VVVXo9Xp0urrdhh6Ph08++YRbbrmFyMhI
      AObPn4/P5+OWW25BURSqqqqYPXs29957L3q9nrlz53LrrbeyZ88evvzyS/Lz84O1l6FDhzJ0
      6FAATpw4wd///ne2bdtGWFgY9957L926davz/bW/j/DwcFauXInFYmH8+PGMHj0aRVEoKSlh
      2bJl3HLLLSxZsoTt27fz0EMPER4ezuLFi1m8eDFWq5Xx48czZswYdDodmqaxdetWPvnkE1wu
      F4MHD+aOO+7AbDbzxRdfkJCQwNChQ1EUhePHj7NgwQJ+9atfATB37lwmTZqEzWbD7/czf/58
      Nm3aBEBGRgY33HADGzZsYPHixRw8eDB43tdeey09evRg0aJFjB49mvj4eCoqKli4cCFpaWl8
      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
      4LXs168fX375ZbAvpKSkhJycnDrnHQgEgud9ww03MGrUqAaHs37++ef0798/+IOtNXjwYNau
      XRssWQYCARYvXhysAp98vqJpderUiVatWvHxxx/XKQ273W4iIiKwWq1kZWUFt+/evRtN04LN
      m8OHD2fHjh2sXLmSjh07BvuBTpWamsrhw4cpKioKbju1oFfLaDTSv39/Fi9eTCAQIDk5mdat
      W+PxeFi6dCl9+/ZtMJhYrVYqKiou2MCCkwdiNHS/ms1mUlJSSElJCf5urr/+enr37o1Op6Nz
      587odLo6v6vhw4djMpnw+/0899xz3HzzzTzzzDM8++yz9T5jA9W1CrPZTEZGBlOmTOH2229n
      8+bNwfMuLy8/a3/dmfTr148vvvgi2OZfWFgY7B88We3f+OT7QtM0NE07exOQoijccccd/OEP
      f2DKlCmMHj2aiooK1q1bx7vvvsvPfvYzHnroIRwOB+np6SxcuJChQ4fW265Yn/79+/Pkk09i
      NBpRFIUJEyac87MFU6ZMYerUqezZs4fk5GT27t3LoUOH+Ne//nXWz5rNZjp16sQLL7zAFVdc
      QVhYGBkZGfzud7/jyiuvpG3btmzbtq3BB21at25NTEwM//znP3n11VeD2zdv3sz777/P2LFj
      iYmJYenSpQwcOPC0m7J379688cYbZGZmsnfvXjZs2BAswXXr1o2bb76Zn/3sZyQlJeHz+ep8
      /uabb+bXv/41f/rTn+jevTu5ubls3LiRd95557R24oqKCubPn8/rr79+WhpSUlKYMGECDz/8
      MBMnTmTLli243W6uueaaOvtZLBbeeuuts44yEhePXq/nscce45FHHmHv3r307NmTI0eOkJ+f
      z3vvvcd9993Hc889xy233ILBYGDu3LlMmTIlWCiIioqiW7du/O1vf+OPf/xjg5lkREQE1113
      Hb/5zW+48cYbKSwsZMmSJcERQqcaNmwYf/jDH7jpppuCNdiBAwfy6aef8uqrrzb4PbGxsVit
      Vl544QU6dOhAenr6OY+BLyoqYubMmcTHx7NhwwZKSkp47LHHGtzfaDRy33338eyzz3LttdcS
      HR3Njh07CAQCvPbaa0yePJmHH36Y48eP07FjR44cOcK2bdv48MMP+fzzz9HpdEyaNAm9Xs/4
      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
      RYTB57yhRa1Wc8cdd/DWW2+xdu1aampqKCkp4a9//SttbW0sW7aMv/zlLxQVFWG1Wnn33Xex
      WCyMHTu2XwVISEhg165d1NXVYTabL2po6bJly3j66ac5ceIEjY2N5Ofn8+ijj/brvUajEb1e
      z86dO2ltbaW+vp7a2lqlfdfhcGCxWNDr9eeMxJMmTaK6upo33nhDaeaArmaDf/7zn8pnamtr
      O2cnOnQ9YdXX12M2m3nllVewWq09agq1tbU0NjZSXV3N//7v/xIcHMyoUaMu+DyZTCbq6+up
      rKykpaWFzZs3s2vXrgvaR0pKCvHx8fzxj3/s8Xm/aeHChWzfvp3c3FwWLVqkbNc9Kqm9vZ2a
      mhrlPAPK6KdXX30Vs9lMaWkpW7duJTAwkJkzZ/L0009TUVFBTU0N//rXvy64bVSlUqFWqykt
      LcVms7F//37+7//+r8c2CQkJbN++ncbGRmpra/F4PFx//fW88MILFBQU0NjYyOHDh3nooYfw
      er3MmjVL6XhtbW0lLy+P/Pz8CyrXQGpvb0en05GXl8ftt9/eo6l0IFxzzTUEBQWh1WpZuXIl
      qamp3HzzzZhMJiZPnqyM/lq2bJlYj3gI6Nf0zszMTJ599llef/11PvnkE7RaLWPHjkWn0zFr
      1ixaWlp48sknaW9vJzY2lqeeegqDwQBARkZGj6q7yWTqMTpi/vz5HD58mPvvv5+AgAAeffRR
      IiIiSE5OVpqWQkNDlZE2Z5ap+2n8xhtvxOPx8Pzzz+NwOAgNDeWGG24AwM/P76zRGMnJyUqH
      r0ql4r777uPPf/4z77//PjNmzOD73/8+BoOB1atXY7PZCAgI4Le//e05n6J0Oh1Llixh586d
      TJ8+XXk9MTGRbdu28eCDD+JyuYiOjuYXv/jFOW+YhYWF/PrXv8br9ZKcnMz//M//9Dhne/fu
      paCgAEmSyMrKYvXq1coTdVJSUq+zgGNiYnrUbMLDw1m+fLnyWTIyMrjmmmt6NO1lZ2crVXaV
      SkVWVlaPp3GVSsXy5ct57rnn+mzOSk5OJiYmBoPB0GMo4I033sjq1au588478ff3Z8GCBSxY
      sAC9Xo9er+fxxx/n5Zdf5te//jUajUYJMj/+8Y958803eeyxx/B4PIwdO5bFixcDXddC9/XW
      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
      HTt24HK5aG1t5dNPPyUlJYWNGzdis9nIz89HkiT0ej2ffFs/JoIAAA/RSURBVPIJZrN5QMtw
      KWbNmkVVVRX33nsvDz74IAsXLhRpqIVeiRrABbBarYwePRqAN998k+nTp+Pn50dqaio2m+2S
      b4bjx48nIyOD/fv3A11PxBERESQmJhISEsJnn31GVlYW0dHRjBo1iuLi4gFdv/iGG25ArVbT
      2NhIUVERZrOZpKQkRowYgVarpaCggPDwcGJjY0lPT6ejo2NAmxfGjRsHdE0W0mq1OBwOXC4X
      o0ePxu128/7775OWlkZISAhpaWkEBwezY8eOATs+dAUhtVqt1MCKi4uZMmUK8fHxjB8/nvLy
      cgCSkpIICgqioqLirAycvrJ7924mTpzIAw88QEdHBxqNBoPBIDqBhV6JANBP3TNhu79M3aNi
      amtrefvtt6mpqWHu3LmXdAw/P78eY7atVivBwV2zj41Go3Kj2bNnD3l5eURFRREeHn5Jx+zW
      nSH12LFj5OXlsXz5cmpra5Xj+/v7K2XbsWMHe/bswW63c/vttw/I8aGrie3DDz+kvPz/t3ev
      MVFc7wPHvwssLLAs7B8WF0FuIhehXmpRwRKvtKmW2thaq7ZNTBubWNukbeobtTXGtmq1L37a
      pJpeEm3SaDXGRn+1tUaNkQYQWvHCTQGBhV2XlYW9ATu7839hmF+JtcGCAuV83oCAe87M7M4z
      c+Y5z6ln6dKlSJJEaGgoKpUKtVqtTMSqrq7GZrNhNptZsWLFkLZfUlLC888/z6lTp4C7w2KJ
      iYkA6HQ6pTTKiRMncLlchIaGkpCQMGR9GIzjx4+TnZ2NTqe7b2VdQfgzEQAGKCgoCK/Xq5yE
      +sZV4+LieOmll+jt7eWHH34gOzt7yMaktVqtUl21p6dHed1Zs2Yxffp0Lly4wM2bN++77vGD
      kGWZS5cu0dLSwurVq1Gr1XR1dSmVU91ut1KKoaCggIyMDBobGykuLqawsHDQ7QOo1WqWL1+O
      x+Ph2LFjGI1GJehIkqQE38zMTJ566ilcLhc//vgjK1euHJLnENeuXcPhcHD69Gnq6uoIDw9X
      joHRaMThcBAWFobNZmPJkiVERERQUVHB5cuXmT59+qDbHyyHw8F7773XL2XWaDSyadOmYU+j
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Sheet 4' width='384'>
      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
      vx8Y/4cIBAL4fL7EbdfK9JiJsvmwmM+HPQXje7yexPgej+eKr5UKbNvGsqyUze/1egkEAimb
      P5WnHUjt/BMz/lTNP62LPPfeey8bNmxg6dKlzJ49m6qqKi5evEh7eztnz56lrKyMtLQ06urq
      2L9/P5WVlYnnVlZWsnv3bubOnTudkUVEblrTugYQCAQIBAL4/X5uu+02/H4/Dz74IGfOnGHj
      xo34fD7Wr1/P4cOHKS8vZ/78+YRCIWzbJiMjg8zMTLxeL3fcccd0xhYRuSldl98E9vl8FBUV
      AZCfn88999xzyX133nln4npmZmbi8sQaQVlZ2TQlFRG5eaXmXi8REblmKgAREZdSAYiIuJQK
      QETEpVQAIiIupQIQEXEpFYCIiEupAEREXEoFICLiUioAERGXUgGIiLiUCkBExKVUACIiLqUC
      EBFxKRWAiIhLqQBERFzquvwgjIhbOVYEZ7jj2gfypWFmFl37OOJqKgCRaRTvOsvor/74msfx
      VN5L+uP/ZwoSiZtpE5CIiEupAEREXEoFICLiUioAERGXUgGIiLiUvgUkIp+Y1XIIq+7Nax7H
      O+cevJWrpyCRXAsVgIh8YvGeWmJHf3HN4xjBGSqASYoPtRP6yUPXPI5ZuJCMzz8PTHMBRKNR
      9u3bR39/P6WlpaxYsYLTp09z/vx5KisrWbJkCX19fezevZv09HTWrFnDwMAAhw8fZv369Zim
      SVdXF0eOHGHDhg0YhjGd8UVEriMH7Ni1D/OhMaZ1H8DQ0BAVFRU8+OCDNDc3Mzg4yMmTJ3no
      oYeoq6tjZGSEHTt2cN9991FcXMyxY8cYHBzk/Pnz9PX1AXDs2DHa29unM7aIyE1pWtcACgoK
      yM/Pp6mpCcuyGBwcpLKyEp/PR1VVFR0dHZimSVZWFvPmzePdd98lJyeHW265hdOnT7Nq1SrG
      xsbIzs4GwHEcbNsGwLZtIpEItm0TjUanJG/cjhMOhy+/PTYFLQzYlp0Y37btK75WKohGo1iW
      lbL5LcsiEolgmslfHnKmatqMx6/LtBOPWVMyjmVZODfJtG8YxrTkdyJTM+04jpPIO60F4DgO
      +/bto6+vj8cff5yurq5P9Lz8/HwuXLhAa2srZWVlNDU1Je6b2AxkmiaBQACfz4ff75+SvKbH
      JBgMXnZ7zOfDnoLxPV5PYnyPx3PF10oFtm1jWVbK5vd6vQQCgWnJb/v9TMUs1DTN6zLtRH3e
      KZn2vV4vgZtg2p+YkU5H/nh0aqYdwzASead1E1B7ezs9PT089NBD+P1+CgoKaGxsxHEcLly4
      QElJCbZtMzY2RmNjI/n5+YnARUVF7Nmzh5qamkveiMfjwePxaH+AiMgkTesaQCwWIxqNsnXr
      VgA2btzIwoULefHFF5k3bx6ZmZncf//9vPbaa6Snp7Nu3Tr6+/tJS0ujsrKSWCxGeno6lZWV
      0xlbROSmNK0FUFFRQUVFxSW3LV68mMWLFyeu5+Xl8eSTTyauFxV9cMrbNWvWALBs2bIkJ5Ub
      lRO3GH3+6Wsex0jLIf2J/5qCRCKpS8cBSGpxHOJdp695GCO9YArCiKQ2nQpCRMSlVAAiIi6l
      AhARcSkVgIiIS6kARERcSgUgIuJSKgAREZdSAYiIuJQKQETEpVQAIiIupQIQEXEpFYCIiEup
      AEREXEoFICLiUioAERGXUgGIiLiUfhBG5EOiMZtTF7uueZz0gI/q2dP/ozOHz7Xz/255/5rH
      Wb1kNn/ywNIpSCQ3MhWAyIcMjIR55rmd1zzO3NJc/uOrD0xBosmJRC26+kPXPM7waGQK0riL
      4zgMj0aveRzDgKz0wBQk+sNUACIiU8COO3zxn1+65nFyMoP89FuPT0GiP+yG2wfQ0dHBb37z
      G7Zs2UIkEqG9vZ0XXniBeDwOQGtrKy+88AKO41znpCIiqe2GWwPYtWsXjz32GC0tLRw+fJjC
      wkL6+vro7Oxk5syZnDhxgnA4fL1jpjQnOooTG7vmcYy0XAzz8mWIwZEwU1HP2RkBDMOYgpFE
      5EpuqAKIx+N4vV4CgQClpaWcO3eOwsJCFi1axJkzZygoKCAWi5GRkXG9o6a06IH/Inrwv695
      nIy/eBsjs+iy2//v7786JdtCf/vP/9c1jyEiH++G2gQ0sbTnOA7xeDxxPTs7m+HhYZqamqio
      qLieEUVEbho3ZAH09PRw5swZSkpKEreXlpaya9cuqqurr2dEEZGbxg21CQhg3bp17Nmzh8zM
      TO666y4GBwexLIsZM2ZgmiaBQICamprrHVNEJOXdcAWQlZXFxo0bE9fz8vISl2+77TYAFi5c
      OO25plNH3wiNHQPXPE5Z4QzKC2dMQSIRuRn9/zuwBqSzR2BKAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Sheet 5' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
